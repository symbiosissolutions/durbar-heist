// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// User model
model User {
    id Int @id @default(autoincrement())

    durbar    Durbar?
    gameAdmin Game?
    feedback  Feedback?
}

// Durbar model
model Durbar {
    id         Int    @id @default(autoincrement())
    name       String
    passphrase String
    treasure   Int
    ownerId    Int    @unique // Foreign key to User model

    // Relationship with User model
    owner           User                @relation(fields: [ownerId], references: [id])
    instructions    PromptInstruction[]
    initiatedHeists Heist[]             @relation("InitiatorDurbar")
    targetedHeists  Heist[]             @relation("TargetDurbar")
    initiatedLoots  Loot[]              @relation("LooterDurbar")
    targetedLoots   Loot[]              @relation("TargetDurbar")
}

// PromptInstruction model
model PromptInstruction {
    id          Int    @id @default(autoincrement())
    instruction String
    durbarId    Int // Foreign key to Durbar model

    // Relationship with Durbar model
    durbar Durbar @relation(fields: [durbarId], references: [id])
}

// Heist model
model Heist {
    id                Int       @id @default(autoincrement())
    initiatorDurbarId Int // Foreign key to Durbar model
    targetDurbarId    Int // Foreign key to Durbar model
    startTime         DateTime  @default(now())
    endTime           DateTime?
    attempts          Int
    successful        Boolean

    // Relationship with Durbar model
    initiatorDurbar Durbar @relation("InitiatorDurbar", fields: [initiatorDurbarId], references: [id])
    targetDurbar    Durbar @relation("TargetDurbar", fields: [targetDurbarId], references: [id])
}

// Loot model
model Loot {
    id                Int      @id @default(autoincrement())
    initiatorDurbarId Int // Foreign key to Durbar model
    targetDurbarId    Int // Foreign key to Durbar model
    amount            Int
    timestamp         DateTime @default(now())

    // Relationship with Durbar model
    looterDurbar Durbar @relation("LooterDurbar", fields: [initiatorDurbarId], references: [id])
    targetDurbar Durbar @relation("TargetDurbar", fields: [targetDurbarId], references: [id])
}

// Game model
model Game {
    id                              Int       @id @default(autoincrement())
    adminId                         Int       @unique // Foreign key to User model
    startTime                       DateTime  @default(now())
    endTime                         DateTime?
    duration                        Int
    maxAttemptPerLoot               Int
    maxLootDuration                 Int
    waitDurationAfterSuccessfulLoot Int
    initialTreasureGold             Int
    constantLootValue               Int

    // Relationship with User model
    admin User @relation(fields: [adminId], references: [id])
}

// Feedback model
model Feedback {
    id      Int     @id @default(autoincrement())
    userId  Int     @unique // Foreign key to User model
    rating  Int
    comment String?

    // Relationship with User model
    user User @relation(fields: [userId], references: [id])
}
